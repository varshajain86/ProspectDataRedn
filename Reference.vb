'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CommonMiningWeb
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CommonMiningSoap", [Namespace]:="http://mosaicco.com/mining/common")>  _
    Partial Public Class CommonMining
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetMinesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductionMinesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAreaAbbreviationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMineAbbreviationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductionDataByMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountiesByMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveDraglinesByMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDraglinesWithHolesEnteredByMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDredgesWithHolesEnteredByMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveDredgesByMineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSampleIdSpecOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEquipmentLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProspectCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProspectCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteProspectCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveProspectCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ProspectDataReduction.My.MySettings.Default.ProspectDataReduction_CommonMiningWeb_CommonMining
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetMinesCompleted As GetMinesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAreasCompleted As GetAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductionMinesCompleted As GetProductionMinesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAreaAbbreviationsCompleted As GetAreaAbbreviationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMineAbbreviationsCompleted As GetMineAbbreviationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMineCompleted As GetMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductionDataByMineCompleted As GetProductionDataByMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountiesByMineCompleted As GetCountiesByMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveDraglinesByMineCompleted As GetActiveDraglinesByMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDraglinesWithHolesEnteredByMineCompleted As GetDraglinesWithHolesEnteredByMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDredgesWithHolesEnteredByMineCompleted As GetDredgesWithHolesEnteredByMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveDredgesByMineCompleted As GetActiveDredgesByMineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSampleIdSpecCompleted As GetSampleIdSpecCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEquipmentLocationCompleted As GetEquipmentLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProspectCodesCompleted As GetProspectCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProspectCodeCompleted As GetProspectCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteProspectCodeCompleted As DeleteProspectCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveProspectCodeCompleted As SaveProspectCodeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetMines", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMines(ByVal includeInactive As Boolean) As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetMines", New Object() {includeInactive})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMinesAsync(ByVal includeInactive As Boolean)
            Me.GetMinesAsync(includeInactive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMinesAsync(ByVal includeInactive As Boolean, ByVal userState As Object)
            If (Me.GetMinesOperationCompleted Is Nothing) Then
                Me.GetMinesOperationCompleted = AddressOf Me.OnGetMinesOperationCompleted
            End If
            Me.InvokeAsync("GetMines", New Object() {includeInactive}, Me.GetMinesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMinesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMinesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMinesCompleted(Me, New GetMinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetAreas", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAreas(ByVal includeInactive As Boolean) As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetAreas", New Object() {includeInactive})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAreasAsync(ByVal includeInactive As Boolean)
            Me.GetAreasAsync(includeInactive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAreasAsync(ByVal includeInactive As Boolean, ByVal userState As Object)
            If (Me.GetAreasOperationCompleted Is Nothing) Then
                Me.GetAreasOperationCompleted = AddressOf Me.OnGetAreasOperationCompleted
            End If
            Me.InvokeAsync("GetAreas", New Object() {includeInactive}, Me.GetAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAreasCompleted(Me, New GetAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetProductionMines", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductionMines() As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetProductionMines", New Object(-1) {})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductionMinesAsync()
            Me.GetProductionMinesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductionMinesAsync(ByVal userState As Object)
            If (Me.GetProductionMinesOperationCompleted Is Nothing) Then
                Me.GetProductionMinesOperationCompleted = AddressOf Me.OnGetProductionMinesOperationCompleted
            End If
            Me.InvokeAsync("GetProductionMines", New Object(-1) {}, Me.GetProductionMinesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductionMinesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductionMinesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductionMinesCompleted(Me, New GetProductionMinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetAreaAbbreviations", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAreaAbbreviations() As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetAreaAbbreviations", New Object(-1) {})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAreaAbbreviationsAsync()
            Me.GetAreaAbbreviationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAreaAbbreviationsAsync(ByVal userState As Object)
            If (Me.GetAreaAbbreviationsOperationCompleted Is Nothing) Then
                Me.GetAreaAbbreviationsOperationCompleted = AddressOf Me.OnGetAreaAbbreviationsOperationCompleted
            End If
            Me.InvokeAsync("GetAreaAbbreviations", New Object(-1) {}, Me.GetAreaAbbreviationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAreaAbbreviationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAreaAbbreviationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAreaAbbreviationsCompleted(Me, New GetAreaAbbreviationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetMineAbbreviations", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMineAbbreviations() As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetMineAbbreviations", New Object(-1) {})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMineAbbreviationsAsync()
            Me.GetMineAbbreviationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMineAbbreviationsAsync(ByVal userState As Object)
            If (Me.GetMineAbbreviationsOperationCompleted Is Nothing) Then
                Me.GetMineAbbreviationsOperationCompleted = AddressOf Me.OnGetMineAbbreviationsOperationCompleted
            End If
            Me.InvokeAsync("GetMineAbbreviations", New Object(-1) {}, Me.GetMineAbbreviationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMineAbbreviationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMineAbbreviationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMineAbbreviationsCompleted(Me, New GetMineAbbreviationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMine(ByVal mineName As String) As MineData
            Dim results() As Object = Me.Invoke("GetMine", New Object() {mineName})
            Return CType(results(0),MineData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMineAsync(ByVal mineName As String)
            Me.GetMineAsync(mineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMineAsync(ByVal mineName As String, ByVal userState As Object)
            If (Me.GetMineOperationCompleted Is Nothing) Then
                Me.GetMineOperationCompleted = AddressOf Me.OnGetMineOperationCompleted
            End If
            Me.InvokeAsync("GetMine", New Object() {mineName}, Me.GetMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMineCompleted(Me, New GetMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetProductionDataByMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductionDataByMine(ByVal mineName As String, ByVal productionStartDate As Date, ByVal productionEndDate As Date) As ProductionData()
            Dim results() As Object = Me.Invoke("GetProductionDataByMine", New Object() {mineName, productionStartDate, productionEndDate})
            Return CType(results(0),ProductionData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductionDataByMineAsync(ByVal mineName As String, ByVal productionStartDate As Date, ByVal productionEndDate As Date)
            Me.GetProductionDataByMineAsync(mineName, productionStartDate, productionEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductionDataByMineAsync(ByVal mineName As String, ByVal productionStartDate As Date, ByVal productionEndDate As Date, ByVal userState As Object)
            If (Me.GetProductionDataByMineOperationCompleted Is Nothing) Then
                Me.GetProductionDataByMineOperationCompleted = AddressOf Me.OnGetProductionDataByMineOperationCompleted
            End If
            Me.InvokeAsync("GetProductionDataByMine", New Object() {mineName, productionStartDate, productionEndDate}, Me.GetProductionDataByMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductionDataByMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductionDataByMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductionDataByMineCompleted(Me, New GetProductionDataByMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetCountiesByMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountiesByMine(ByVal mineName As String) As String()
            Dim results() As Object = Me.Invoke("GetCountiesByMine", New Object() {mineName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountiesByMineAsync(ByVal mineName As String)
            Me.GetCountiesByMineAsync(mineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountiesByMineAsync(ByVal mineName As String, ByVal userState As Object)
            If (Me.GetCountiesByMineOperationCompleted Is Nothing) Then
                Me.GetCountiesByMineOperationCompleted = AddressOf Me.OnGetCountiesByMineOperationCompleted
            End If
            Me.InvokeAsync("GetCountiesByMine", New Object() {mineName}, Me.GetCountiesByMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountiesByMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountiesByMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountiesByMineCompleted(Me, New GetCountiesByMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetActiveDraglinesByMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveDraglinesByMine(ByVal mineName As String) As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetActiveDraglinesByMine", New Object() {mineName})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveDraglinesByMineAsync(ByVal mineName As String)
            Me.GetActiveDraglinesByMineAsync(mineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveDraglinesByMineAsync(ByVal mineName As String, ByVal userState As Object)
            If (Me.GetActiveDraglinesByMineOperationCompleted Is Nothing) Then
                Me.GetActiveDraglinesByMineOperationCompleted = AddressOf Me.OnGetActiveDraglinesByMineOperationCompleted
            End If
            Me.InvokeAsync("GetActiveDraglinesByMine", New Object() {mineName}, Me.GetActiveDraglinesByMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveDraglinesByMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveDraglinesByMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveDraglinesByMineCompleted(Me, New GetActiveDraglinesByMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetDraglinesWithHolesEnteredByMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDraglinesWithHolesEnteredByMine(ByVal mineName As String) As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetDraglinesWithHolesEnteredByMine", New Object() {mineName})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDraglinesWithHolesEnteredByMineAsync(ByVal mineName As String)
            Me.GetDraglinesWithHolesEnteredByMineAsync(mineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDraglinesWithHolesEnteredByMineAsync(ByVal mineName As String, ByVal userState As Object)
            If (Me.GetDraglinesWithHolesEnteredByMineOperationCompleted Is Nothing) Then
                Me.GetDraglinesWithHolesEnteredByMineOperationCompleted = AddressOf Me.OnGetDraglinesWithHolesEnteredByMineOperationCompleted
            End If
            Me.InvokeAsync("GetDraglinesWithHolesEnteredByMine", New Object() {mineName}, Me.GetDraglinesWithHolesEnteredByMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDraglinesWithHolesEnteredByMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDraglinesWithHolesEnteredByMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDraglinesWithHolesEnteredByMineCompleted(Me, New GetDraglinesWithHolesEnteredByMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetDredgesWithHolesEnteredByMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDredgesWithHolesEnteredByMine(ByVal mineName As String) As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetDredgesWithHolesEnteredByMine", New Object() {mineName})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDredgesWithHolesEnteredByMineAsync(ByVal mineName As String)
            Me.GetDredgesWithHolesEnteredByMineAsync(mineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDredgesWithHolesEnteredByMineAsync(ByVal mineName As String, ByVal userState As Object)
            If (Me.GetDredgesWithHolesEnteredByMineOperationCompleted Is Nothing) Then
                Me.GetDredgesWithHolesEnteredByMineOperationCompleted = AddressOf Me.OnGetDredgesWithHolesEnteredByMineOperationCompleted
            End If
            Me.InvokeAsync("GetDredgesWithHolesEnteredByMine", New Object() {mineName}, Me.GetDredgesWithHolesEnteredByMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDredgesWithHolesEnteredByMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDredgesWithHolesEnteredByMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDredgesWithHolesEnteredByMineCompleted(Me, New GetDredgesWithHolesEnteredByMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetActiveDredgesByMine", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveDredgesByMine(ByVal mineName As String) As BusinessEntityAttributeValue()
            Dim results() As Object = Me.Invoke("GetActiveDredgesByMine", New Object() {mineName})
            Return CType(results(0),BusinessEntityAttributeValue())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveDredgesByMineAsync(ByVal mineName As String)
            Me.GetActiveDredgesByMineAsync(mineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveDredgesByMineAsync(ByVal mineName As String, ByVal userState As Object)
            If (Me.GetActiveDredgesByMineOperationCompleted Is Nothing) Then
                Me.GetActiveDredgesByMineOperationCompleted = AddressOf Me.OnGetActiveDredgesByMineOperationCompleted
            End If
            Me.InvokeAsync("GetActiveDredgesByMine", New Object() {mineName}, Me.GetActiveDredgesByMineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveDredgesByMineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveDredgesByMineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveDredgesByMineCompleted(Me, New GetActiveDredgesByMineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetSampleIdSpec", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSampleIdSpec(ByVal township As Integer, ByVal section As Integer, ByVal range As Integer, ByVal splitNumber As Integer, ByVal holeLocation As String, ByVal redrilled As Boolean, ByVal released As Boolean) As String
            Dim results() As Object = Me.Invoke("GetSampleIdSpec", New Object() {township, section, range, splitNumber, holeLocation, redrilled, released})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSampleIdSpecAsync(ByVal township As Integer, ByVal section As Integer, ByVal range As Integer, ByVal splitNumber As Integer, ByVal holeLocation As String, ByVal redrilled As Boolean, ByVal released As Boolean)
            Me.GetSampleIdSpecAsync(township, section, range, splitNumber, holeLocation, redrilled, released, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSampleIdSpecAsync(ByVal township As Integer, ByVal section As Integer, ByVal range As Integer, ByVal splitNumber As Integer, ByVal holeLocation As String, ByVal redrilled As Boolean, ByVal released As Boolean, ByVal userState As Object)
            If (Me.GetSampleIdSpecOperationCompleted Is Nothing) Then
                Me.GetSampleIdSpecOperationCompleted = AddressOf Me.OnGetSampleIdSpecOperationCompleted
            End If
            Me.InvokeAsync("GetSampleIdSpec", New Object() {township, section, range, splitNumber, holeLocation, redrilled, released}, Me.GetSampleIdSpecOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSampleIdSpecOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSampleIdSpecCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSampleIdSpecCompleted(Me, New GetSampleIdSpecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetEquipmentLocation", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEquipmentLocation(ByVal equipmentBusinessEntityId As Long, ByVal productionDate As Date) As EquipmentLocationData
            Dim results() As Object = Me.Invoke("GetEquipmentLocation", New Object() {equipmentBusinessEntityId, productionDate})
            Return CType(results(0),EquipmentLocationData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEquipmentLocationAsync(ByVal equipmentBusinessEntityId As Long, ByVal productionDate As Date)
            Me.GetEquipmentLocationAsync(equipmentBusinessEntityId, productionDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEquipmentLocationAsync(ByVal equipmentBusinessEntityId As Long, ByVal productionDate As Date, ByVal userState As Object)
            If (Me.GetEquipmentLocationOperationCompleted Is Nothing) Then
                Me.GetEquipmentLocationOperationCompleted = AddressOf Me.OnGetEquipmentLocationOperationCompleted
            End If
            Me.InvokeAsync("GetEquipmentLocation", New Object() {equipmentBusinessEntityId, productionDate}, Me.GetEquipmentLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEquipmentLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEquipmentLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEquipmentLocationCompleted(Me, New GetEquipmentLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetProspectCodes", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProspectCodes(ByVal prospectCodeType As String) As ProspectCodesDetailData()
            Dim results() As Object = Me.Invoke("GetProspectCodes", New Object() {prospectCodeType})
            Return CType(results(0),ProspectCodesDetailData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProspectCodesAsync(ByVal prospectCodeType As String)
            Me.GetProspectCodesAsync(prospectCodeType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProspectCodesAsync(ByVal prospectCodeType As String, ByVal userState As Object)
            If (Me.GetProspectCodesOperationCompleted Is Nothing) Then
                Me.GetProspectCodesOperationCompleted = AddressOf Me.OnGetProspectCodesOperationCompleted
            End If
            Me.InvokeAsync("GetProspectCodes", New Object() {prospectCodeType}, Me.GetProspectCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProspectCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProspectCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProspectCodesCompleted(Me, New GetProspectCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/GetProspectCode", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProspectCode(ByVal prospectCodeType As String, ByVal prospectCode As String) As ProspectCodesDetailData
            Dim results() As Object = Me.Invoke("GetProspectCode", New Object() {prospectCodeType, prospectCode})
            Return CType(results(0),ProspectCodesDetailData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProspectCodeAsync(ByVal prospectCodeType As String, ByVal prospectCode As String)
            Me.GetProspectCodeAsync(prospectCodeType, prospectCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProspectCodeAsync(ByVal prospectCodeType As String, ByVal prospectCode As String, ByVal userState As Object)
            If (Me.GetProspectCodeOperationCompleted Is Nothing) Then
                Me.GetProspectCodeOperationCompleted = AddressOf Me.OnGetProspectCodeOperationCompleted
            End If
            Me.InvokeAsync("GetProspectCode", New Object() {prospectCodeType, prospectCode}, Me.GetProspectCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProspectCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProspectCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProspectCodeCompleted(Me, New GetProspectCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/DeleteProspectCode", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteProspectCode(ByVal prospectCodeType As String, ByVal prospectCode As String)
            Me.Invoke("DeleteProspectCode", New Object() {prospectCodeType, prospectCode})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteProspectCodeAsync(ByVal prospectCodeType As String, ByVal prospectCode As String)
            Me.DeleteProspectCodeAsync(prospectCodeType, prospectCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteProspectCodeAsync(ByVal prospectCodeType As String, ByVal prospectCode As String, ByVal userState As Object)
            If (Me.DeleteProspectCodeOperationCompleted Is Nothing) Then
                Me.DeleteProspectCodeOperationCompleted = AddressOf Me.OnDeleteProspectCodeOperationCompleted
            End If
            Me.InvokeAsync("DeleteProspectCode", New Object() {prospectCodeType, prospectCode}, Me.DeleteProspectCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteProspectCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteProspectCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteProspectCodeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mosaicco.com/mining/common/SaveProspectCode", RequestNamespace:="http://mosaicco.com/mining/common", ResponseNamespace:="http://mosaicco.com/mining/common", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SaveProspectCode(ByVal data As ProspectCodesDetailData)
            Me.Invoke("SaveProspectCode", New Object() {data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveProspectCodeAsync(ByVal data As ProspectCodesDetailData)
            Me.SaveProspectCodeAsync(data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveProspectCodeAsync(ByVal data As ProspectCodesDetailData, ByVal userState As Object)
            If (Me.SaveProspectCodeOperationCompleted Is Nothing) Then
                Me.SaveProspectCodeOperationCompleted = AddressOf Me.OnSaveProspectCodeOperationCompleted
            End If
            Me.InvokeAsync("SaveProspectCode", New Object() {data}, Me.SaveProspectCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveProspectCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveProspectCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveProspectCodeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mosaicco.com/mining/common")>  _
    Partial Public Class BusinessEntityAttributeValue
        
        Private idField As Long
        
        Private nameField As String
        
        Private aliasNameField As String
        
        Private descriptionField As String
        
        Private typeIDField As Long
        
        Private hierarchyIDField As Long
        
        Private parentIDField As Long
        
        Private sortOrderField As Long
        
        Private hasDelaysField As String
        
        Private imageNameField As String
        
        Private attributeIDField As Long
        
        Private attributeNameField As String
        
        Private dataTypeField As String
        
        Private attributeValueField As String
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AliasName() As String
            Get
                Return Me.aliasNameField
            End Get
            Set
                Me.aliasNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TypeID() As Long
            Get
                Return Me.typeIDField
            End Get
            Set
                Me.typeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HierarchyID() As Long
            Get
                Return Me.hierarchyIDField
            End Get
            Set
                Me.hierarchyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentID() As Long
            Get
                Return Me.parentIDField
            End Get
            Set
                Me.parentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SortOrder() As Long
            Get
                Return Me.sortOrderField
            End Get
            Set
                Me.sortOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasDelays() As String
            Get
                Return Me.hasDelaysField
            End Get
            Set
                Me.hasDelaysField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ImageName() As String
            Get
                Return Me.imageNameField
            End Get
            Set
                Me.imageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AttributeID() As Long
            Get
                Return Me.attributeIDField
            End Get
            Set
                Me.attributeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AttributeName() As String
            Get
                Return Me.attributeNameField
            End Get
            Set
                Me.attributeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataType() As String
            Get
                Return Me.dataTypeField
            End Get
            Set
                Me.dataTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AttributeValue() As String
            Get
                Return Me.attributeValueField
            End Get
            Set
                Me.attributeValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mosaicco.com/mining/common")>  _
    Partial Public Class ProspectCodesDetailData
        
        Private pROSP_CODE_TYPE_NAMEField As String
        
        Private pROSP_CODEField As String
        
        Private pROSP_CODE_DESCField As String
        
        '''<remarks/>
        Public Property PROSP_CODE_TYPE_NAME() As String
            Get
                Return Me.pROSP_CODE_TYPE_NAMEField
            End Get
            Set
                Me.pROSP_CODE_TYPE_NAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PROSP_CODE() As String
            Get
                Return Me.pROSP_CODEField
            End Get
            Set
                Me.pROSP_CODEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PROSP_CODE_DESC() As String
            Get
                Return Me.pROSP_CODE_DESCField
            End Get
            Set
                Me.pROSP_CODE_DESCField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mosaicco.com/mining/common")>  _
    Partial Public Class EquipmentLocationData
        
        Private equipmentBusinessEntityIdField As Long
        
        Private equipmentNameField As String
        
        Private hole1LocationField As String
        
        Private hole2LocationField As String
        
        Private section1Field As Integer
        
        Private township1Field As Integer
        
        Private range1Field As Integer
        
        Private section2Field As Integer
        
        Private township2Field As Integer
        
        Private range2Field As Integer
        
        Private directionField As String
        
        Private matrixThicknessField As Decimal
        
        Private overburdenThicknessField As Decimal
        
        '''<remarks/>
        Public Property EquipmentBusinessEntityId() As Long
            Get
                Return Me.equipmentBusinessEntityIdField
            End Get
            Set
                Me.equipmentBusinessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EquipmentName() As String
            Get
                Return Me.equipmentNameField
            End Get
            Set
                Me.equipmentNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hole1Location() As String
            Get
                Return Me.hole1LocationField
            End Get
            Set
                Me.hole1LocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hole2Location() As String
            Get
                Return Me.hole2LocationField
            End Get
            Set
                Me.hole2LocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Section1() As Integer
            Get
                Return Me.section1Field
            End Get
            Set
                Me.section1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Township1() As Integer
            Get
                Return Me.township1Field
            End Get
            Set
                Me.township1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Range1() As Integer
            Get
                Return Me.range1Field
            End Get
            Set
                Me.range1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Section2() As Integer
            Get
                Return Me.section2Field
            End Get
            Set
                Me.section2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Township2() As Integer
            Get
                Return Me.township2Field
            End Get
            Set
                Me.township2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Range2() As Integer
            Get
                Return Me.range2Field
            End Get
            Set
                Me.range2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direction() As String
            Get
                Return Me.directionField
            End Get
            Set
                Me.directionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MatrixThickness() As Decimal
            Get
                Return Me.matrixThicknessField
            End Get
            Set
                Me.matrixThicknessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OverburdenThickness() As Decimal
            Get
                Return Me.overburdenThicknessField
            End Get
            Set
                Me.overburdenThicknessField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mosaicco.com/mining/common")>  _
    Partial Public Class ProductionData
        
        Private materialNameField As String
        
        Private feField As Double
        
        Private alField As Double
        
        Private mgField As Double
        
        Private bPLField As Double
        
        Private tonsField As Double
        
        '''<remarks/>
        Public Property MaterialName() As String
            Get
                Return Me.materialNameField
            End Get
            Set
                Me.materialNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fe() As Double
            Get
                Return Me.feField
            End Get
            Set
                Me.feField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Al() As Double
            Get
                Return Me.alField
            End Get
            Set
                Me.alField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mg() As Double
            Get
                Return Me.mgField
            End Get
            Set
                Me.mgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BPL() As Double
            Get
                Return Me.bPLField
            End Get
            Set
                Me.bPLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tons() As Double
            Get
                Return Me.tonsField
            End Get
            Set
                Me.tonsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mosaicco.com/mining/common")>  _
    Partial Public Class MineData
        
        Private idField As Long
        
        Private nameField As String
        
        Private isActiveProductionField As Boolean
        
        Private calcSplitConcField As Boolean
        
        Private maxMgOField As System.Nullable(Of Double)
        
        Private hasCatalogReservesField As Boolean
        
        Private hasProspectIPField As Boolean
        
        Private hasSyntheticHolesField As Boolean
        
        Private hasCoarseAndFinePebbleMinablilitesField As Boolean
        
        Private useReducedProspectHoleMaterialsField As Boolean
        
        Private useReducedProspectSplitMaterialsField As Boolean
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsActiveProduction() As Boolean
            Get
                Return Me.isActiveProductionField
            End Get
            Set
                Me.isActiveProductionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CalcSplitConc() As Boolean
            Get
                Return Me.calcSplitConcField
            End Get
            Set
                Me.calcSplitConcField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MaxMgO() As System.Nullable(Of Double)
            Get
                Return Me.maxMgOField
            End Get
            Set
                Me.maxMgOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasCatalogReserves() As Boolean
            Get
                Return Me.hasCatalogReservesField
            End Get
            Set
                Me.hasCatalogReservesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasProspectIP() As Boolean
            Get
                Return Me.hasProspectIPField
            End Get
            Set
                Me.hasProspectIPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasSyntheticHoles() As Boolean
            Get
                Return Me.hasSyntheticHolesField
            End Get
            Set
                Me.hasSyntheticHolesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasCoarseAndFinePebbleMinablilites() As Boolean
            Get
                Return Me.hasCoarseAndFinePebbleMinablilitesField
            End Get
            Set
                Me.hasCoarseAndFinePebbleMinablilitesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseReducedProspectHoleMaterials() As Boolean
            Get
                Return Me.useReducedProspectHoleMaterialsField
            End Get
            Set
                Me.useReducedProspectHoleMaterialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseReducedProspectSplitMaterials() As Boolean
            Get
                Return Me.useReducedProspectSplitMaterialsField
            End Get
            Set
                Me.useReducedProspectSplitMaterialsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetMinesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMinesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMinesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetAreasCompletedEventHandler(ByVal sender As Object, ByVal e As GetAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetProductionMinesCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductionMinesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductionMinesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetAreaAbbreviationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAreaAbbreviationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAreaAbbreviationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetMineAbbreviationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMineAbbreviationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMineAbbreviationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MineData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MineData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetProductionDataByMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductionDataByMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductionDataByMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProductionData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProductionData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetCountiesByMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountiesByMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountiesByMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetActiveDraglinesByMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveDraglinesByMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveDraglinesByMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetDraglinesWithHolesEnteredByMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetDraglinesWithHolesEnteredByMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDraglinesWithHolesEnteredByMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetDredgesWithHolesEnteredByMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetDredgesWithHolesEnteredByMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDredgesWithHolesEnteredByMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetActiveDredgesByMineCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveDredgesByMineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveDredgesByMineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BusinessEntityAttributeValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BusinessEntityAttributeValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetSampleIdSpecCompletedEventHandler(ByVal sender As Object, ByVal e As GetSampleIdSpecCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSampleIdSpecCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetEquipmentLocationCompletedEventHandler(ByVal sender As Object, ByVal e As GetEquipmentLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEquipmentLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EquipmentLocationData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EquipmentLocationData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetProspectCodesCompletedEventHandler(ByVal sender As Object, ByVal e As GetProspectCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProspectCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProspectCodesDetailData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProspectCodesDetailData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetProspectCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetProspectCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProspectCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProspectCodesDetailData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProspectCodesDetailData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub DeleteProspectCodeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub SaveProspectCodeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
